<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gameTmr.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADTBgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAaNSURBVHja7dvNSqN3GMbhfBgzturQ0kULWqWIpHTRFoJttn7QGKG6L+gmh+DHSjwK
        92q7EBeuBI8hR+AZuFACIXGThXnKK3RRKB3HvEoyuX5wn8DDP9dMm0wmJI1sGSeQACAJAJIAIAkAkgAg
        CQCSACAJAJIAIAkAkgAgCQCSACAJAJIAIAkAkgAgCQCSACAJAJIAIAkAkgAgCQCSACAJAJIAIAkAkgAg
        CQCSACAJAJIAIAkAkgAgCQASACQBQNKIA9DtdqPT6US73bYXLrlfq9WK+/v7aDabbpLCHh4eotfr+bS+
        FgDJgz05OYnt7e3Y2NiIWq1mfWx5eTnK5XJUKpWoVqtu0uc2Nzdjb28vGo0GCNIG4O7uLur1ehSLxchk
        MmYDu7m5uTg/P/epTROAw8PDKBQKHpgNxUqlUtzc3PjkpgXAwsKCh2VDs1wuF8fHxz65aQEwNjbmYdlQ
        7eDgwCc3LQA8KBu27e7u+uQCwAAgABgA9HoA/Ln+lz1jn32Rc8eUlssDAABDOHdMZxPvcwAAAAD8bQoA
        AAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAA
        AAQAAAAAAAAAAAAA4OECAAAA8HABAAAAeLgAAAAAPFwAAAAABgAAAMAAAAAAGAAAAAADAAAAYAAAAAAM
        AAAAAADcEQAAAIA7AgAAAHBHAAAAAO4IAAAAwAAAAAAYAAAAAAMAAABgAAAAAAwAAACAAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAA
        CAAAAIAAAAAAAAAAAAAAADxcAAAAAB4uAAAAAA8XAAAAgIcLAAAAwAAAAAAYAAAAAAMAAABgAAAAAAwA
        AACAAQAAAACAOwIAAABwRwAAAADuCAAAAMAdAQAAABgAAAAAAwAAAGAAAAAADAAAGPr98seEO74RAPv7
        +z65ABisfffruDumtPGJ7P/ecn19PU5PT+0jd3Z2FtfX13F7e/t8ALK5TOQL9qEldwLA6/+nVLJ8Ph/j
        4+P2gk1OTsbS0lJcXl7G4+PjhwEws09vMzMzcXV1BQCzUd3a2hoAzEZ109PTkZmamnIMsxFcNpuNzOrq
        qmOYjeqS/xEwOzvrEGajuOSrgOQrgeSrgeQrAl+VvGzJV1O+BnybrwF9NZ3OV9NP++cHAcmPA5IfCSQ/
        FvCjiY9f8uMUAKSzwrusW6awb38uPB8A9Vfy81SPNp0VJwGQxn7afAeAtyr5ByoeLQAGaT/+DgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD66AAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABA
        AAAAAAQAAABAAAAAAADg0QIAAADwaAEAAAB4tAAAAAA8WgAAAAAGAAAAwAAAAAAYAAAAAAMAAABgAAAA
        AAwAAAAAANwSAAAAgFsCAAAAcEsAAAAAbgkAAADAjQAAAAAYAAAAAAMAAABgAAAAAAwAAACAAQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAA
        AAAACAAAAIAAAAAAAAAAAAAAADxaAAAAAB4tAAAAAI8WAAAAgEcLAAAAwAAAAAAYAAAAAAMAAABgAAAA
        AAwAAACAAQAAAACAWwIAAABwSwAAAABuCQAAAMAtAQAAALgRAAAAAAMAAABgAADApwXA5wBIYz/8VgTA
        oACQy2fiq/l8fPP9WHxdsv9acpsvZ/ORzWUAkMIm3mcBMCgAmA3kfHQBYAAQAAwAemkHBwcekw3VCoUC
        ANLq+Pg4stmsh2VDs8XFRQCk1c3NTZRKJQ/LhuZP/6OjIwCk2cXFRczPz3tgNtArFotRr9fj7u4OAGnW
        6/Wi0WjE3t5ebG1tRa1Wsz5WrVajUqlEuVyOlZUVN+lzGxsbsbOzE2dnZ9FqtZ7eLABeCYKHh4dot9vW
        55rNZtzf3z892E6n4yZ9LLlft9v911sFgDTCAUACgCQASAKAJABIAoAkAEgCgCQASAKAJABIAoAkAEgC
        gCQASAKAJABIAoAkAEgCgCQASAKAJABIAoAkAEgCgCQASAKAJABIAoAkAEgCgCQASAKAJABIAoAkAEgA
        cAIJAJJGsL8By4Aw2PnN/M0AAAAASUVORK5CYII=
</value>
  </data>
</root>